<?xml version="1.0" encoding="utf-8"?>
<executable>
<category>Shape Analysis</category>
<title>ParaToSPHARMMesh</title>
<description>
Compute SPHARM coefs and associated Mesh : The output is a series of SPHARM coefficients and SPHARM-PDM meshes, one set in the original coordinate system, one in the first order ellipsoid aligned coordinate system and one in the Procrustes aligned coordinate system.
</description>

  <parameters>
    <label>IO</label>
    <description>Input/output parameters</description>
    <geometry>
      <name>inParaFile</name>
      <label>Input Para mesh dataset</label>
      <channel>input</channel>
      <index>0</index>
      <description>input para mesh dataset</description>
    </geometry>
    <geometry>
      <name>inSurfFile</name>
      <label>Input Surface mesh dataset</label>
      <channel>input</channel>
      <index>1</index>
      <description>input surface mesh dataset</description>
    </geometry>
    <file>
      <name>outbase</name>
      <label>Output Directory and base filename</label>
      <channel>output</channel>
      <index>2</index>
      <description>Output Directory and base filename</description>
    </file>
  </parameters>

  <parameters advanced="true">
    <label>Main Parameters</label>
    <description>Main Parameters of the Parametrization</description>
    <integer>
      <name>subdivLevel</name>
      <default>20</default>
      <label>Subdivision level for linear ikosahedron subdivision</label>
      <longflag>subdivLevel</longflag>
      <description>Subdivision level for linear ikosahedron subdivision</description>
    </integer>
    <integer>
      <name>spharmDegree</name>
      <default>12</default>
      <label>Degree of spherical harmonic expansion</label>
      <longflag>spharmDegree</longflag>
      <description>In our experience, the SPHARM maximal degree is should be chosen between 12 (hippocampus) to 15 (lateral ventricle, caudate) for brain structures. If the degree is chosen too high the reconstructed SPHARM surface will often show signs of voxelization.</description>
    </integer>
	 <integer>
		 <name>thetaIteration</name>
		 <default>100</default>
		 <label>Number of theta iterations</label>
		 <longflag>thetaIteration</longflag>
		 <description>Number of theta iterations that will be used to calculate the medial axis</description>
	 </integer>
	 <integer>
		 <name>phiIteration</name>
		 <default>100</default>
		 <label>Number of phi iterations</label>
		 <longflag>phiIteration</longflag>
		 <description>Number of phi iterations that will be used to calculate the medial axis</description>
	 </integer>
  </parameters>

  <parameters advanced="true">
    <label>Normalization Options</label>
    <description>Normalization Options</description>
    <boolean>
      <name>flipTemplateFileOn</name>
      <default>false</default>
      <label>Use the Fliptemplate for normalization</label>
      <longflag>flipTemplateOn</longflag>
      <description>Use the Fliptemplate for normalization</description>
    </boolean>
    <file>
      <name>flipTemplateFile</name>
     <!-- <default>*.coef</default>-->
      <label>Fliptemplate for normalization of axis-flips</label>
      <longflag>flipTemplate</longflag>
      <channel>input</channel>
      <description>This flipTemplate is used to test all possible flips of the parametrization along the first order ellipsoid axis and select the one whose reconstruction has minimal distance to the flip-template.</description>
    </file>
    <boolean>
      <name>regTemplateFileOn</name>
      <default>false</default>
      <label>Use the Registration template</label>
      <longflag>regTemplateFileOn</longflag>
      <description>Use the registration template</description> 
    </boolean>
    <geometry>
      <name>regTemplateFile</name>
      <label>Registration template</label>
      <longflag>regTemplate</longflag>
      <channel>input</channel>
      <description>Set a registration template</description>
    </geometry>
  </parameters>

  <parameters advanced="true">
  <label>Other Options</label>
  <description>Other Options</description>
    <boolean>
      <name>writePara</name>
      <default>true</default>
      <label>Write sphere parametrization and coloring to file</label>
      <longflag>paraOut</longflag>
      <description>The spherical icosahedron subdivision, as well as local phi and theta attribute files for the quality control visualization with KWMeshVisu will be written out.</description>
    </boolean>
    <boolean>
      <name>NoParaAlignFlag</name>
      <default>false</default>
      <label>Do not do any aligment/correspondence</label>
      <longflag>NoParaAlign</longflag>
      <description>Do not do any aligment/correspondence of the parametrization using the first order ellipsoid</description>
    </boolean>
	 <boolean>
		 <name>medialMesh</name>
		 <default>false</default>
		 <label>Build the medial mesh</label>
		 <longflag>medialMesh</longflag>
		 <description>Build the mesh that will be used to calculate the medial axis</description>
    </boolean>
    <boolean>
      <name>debug</name>
      <default>false</default>
      <label>Verbose mode</label>
      <longflag>verb</longflag>
      <description>Verbose mode</description>
    </boolean>
  </parameters>

  <parameters advanced="true">
  <label>Expert Options</label>
  <description>Use only if you know what you are doing !</description>
    <boolean>
      <name>regParaTemplateFileOn</name>
      <default>false</default>
      <label>Use the template for parameter Normalization and Registration</label>
      <longflag>regParaTemplateFileOn</longflag>
      <description>Use the template for parameter Normalization and Registration</description>
    </boolean>
    <geometry>
      <name>regParaTemplateFile</name>
      <label>template for parameter Normalization and Registration</label>       
      <longflag>regParaTemplate</longflag>
      <channel>input</channel>
      <description>Set a template for parameter normalization and registration</description>
    </geometry>
    <boolean>
	    <name>regParaPointsOn</name>
      <default>false</default>
      <label>Use regParaPoints File</label>
      <longflag>regParaPointsOn</longflag>
      <description>Use regParaPoints File</description>
    </boolean>
    <file>
	    <name>regParaPoints</name>
	    <label>regParaPoints File</label>
	    <longflag>regParaPoints</longflag>
      <channel>input</channel>
      <description>sample points on regParaTemplate for parameter alignment</description>
    </file>
    <boolean>
       <name>procrustesTransformationOutputOn</name>
       <default>false</default>
       <label>Procrustes transformation output</label>
       <longflag>procrustesTransformationOutputOn</longflag>
       <description>Enables the output of the computed Procrustes affine transformation matrix. This can be used to check if improper flips occured.</description>
    </boolean>
    <file>
      <name>procrustesTransformationFile</name>
      <label>procrustesTransformationFile</label>
      <longflag>procrustesTransformationFile</longflag>
      <channel>output</channel>
      <description>File that the Procrusted affine transformation matrix will be written to.</description>
    </file>
    <integer>
      <name>finalFlipIndex</name>
      <default>0</default>
      <label>allows an optional additional flipping of the parametrization</label>
      <longflag>FinalFlip</longflag>
      <constraints>
        <minimum>0</minimum>
        <step>1</step>
        <maximum>7</maximum>
      </constraints>
      <description>This is rarely necessary,only in case the general first order ellipsoid heuristic fails...        Flipping of the parametrization ALONG a given axis will lead to a flip of the coordinates ALONG the same axis in the ellipse aligned mesh.       1 = flip along axes of x &amp; y,     2 = flip along y &amp; z,       3 = flip along x &amp; z       4 = flip along x,        5 = flip along y,        6 = flip along x &amp; y &amp; z,       7 = flip along z  where y is the smallest, x is the second smallest and z is the long axis of the ellipsoid</description>
    </integer>
  </parameters>

</executable>


